{"ast":null,"code":"import _initializerDefineProperty from \"/Users/zhoushixiong/zsx_work/FangAllOne/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/initializerDefineProperty\";\nimport _classCallCheck from \"/Users/zhoushixiong/zsx_work/FangAllOne/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/zhoushixiong/zsx_work/FangAllOne/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _applyDecoratedDescriptor from \"/Users/zhoushixiong/zsx_work/FangAllOne/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/applyDecoratedDescriptor\";\nimport _initializerWarningHelper from \"/Users/zhoushixiong/zsx_work/FangAllOne/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/initializerWarningHelper\";\n\nvar _class, _descriptor, _descriptor2, _descriptor3;\n\nimport { CHECK_AUTH, SHOW_ID } from './../../constants/API';\nimport { observable, computed, action } from \"mobx\";\nimport { auth, api } from \"../../api\";\nimport informationMsg from './InformationMsg';\nexport var UserSession = (_class =\n/*#__PURE__*/\nfunction () {\n  function UserSession() {\n    _classCallCheck(this, UserSession);\n\n    _initializerDefineProperty(this, \"username\", _descriptor, this);\n\n    _initializerDefineProperty(this, \"isLogined\", _descriptor2, this);\n\n    _initializerDefineProperty(this, \"fetching\", _descriptor3, this);\n  }\n\n  _createClass(UserSession, [{\n    key: \"logOut\",\n    value: function logOut() {\n      console.log('2');\n      window.localStorage.removeItem('fang_token');\n      window.localStorage.removeItem('fang_userId');\n      this.username = \"\";\n      this.isLogined = false;\n      this.fetching = false;\n    }\n  }, {\n    key: \"getUserInfo\",\n    value: function getUserInfo() {\n      var _this = this;\n\n      console.log('登录成功拉取数据');\n      this.fetching = true;\n\n      if (!this.userId) {\n        this.isLogined = false;\n        window.localStorage.removeItem('fang_token');\n        return window.localStorage.removeItem('fang_userId');\n      }\n\n      console.log(this.userId);\n      api('users', SHOW_ID, {\n        id: this.userId,\n        token: this.token\n      }, {\n        fields: ['username', 'id']\n      }).then(function (rlt) {\n        console.log(rlt);\n        _this.fetching = false;\n\n        if (rlt.data.id.toString() === _this.userId) {\n          _this.isLogined = true;\n          return _this.username = rlt.data.username;\n        } else {\n          _this.isLogined = false;\n          window.localStorage.removeItem('fang_token');\n          window.localStorage.removeItem('fang_userId');\n        }\n      });\n    }\n  }, {\n    key: \"checkLogined\",\n    value: function checkLogined() {\n      var _this2 = this;\n\n      var token = this.token;\n\n      if (!token) {\n        this.isLogined = false;\n        return informationMsg.show('您已登出');\n      }\n\n      this.isLogined = true; //预期是登录成功，这样可以保障登录或者注册一瞬间，不会被登出\n\n      auth(CHECK_AUTH, token).then(function (rlt) {\n        if (rlt.data.toString() === _this2.userId) {\n          return _this2.isLogined = true;\n        }\n\n        _this2.isLogined = false;\n        return informationMsg.show('您已登出');\n      }).catch(function (err) {\n        if (err.toString() === 'Error: Request failed with status code 401') {\n          _this2.isLogined = false;\n          return informationMsg.show('您已登出');\n        }\n      });\n    }\n  }, {\n    key: \"setUsername\",\n    value: function setUsername(value) {\n      return this.username = value;\n    }\n  }, {\n    key: \"token\",\n    get: function get() {\n      return window.localStorage.getItem('fang_token');\n    }\n  }, {\n    key: \"userId\",\n    get: function get() {\n      return window.localStorage.getItem('fang_userId');\n    }\n  }]);\n\n  return UserSession;\n}(), (_descriptor = _applyDecoratedDescriptor(_class.prototype, \"username\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return \"\";\n  }\n}), _descriptor2 = _applyDecoratedDescriptor(_class.prototype, \"isLogined\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return true;\n  }\n}), _descriptor3 = _applyDecoratedDescriptor(_class.prototype, \"fetching\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return false;\n  }\n}), _applyDecoratedDescriptor(_class.prototype, \"token\", [computed], Object.getOwnPropertyDescriptor(_class.prototype, \"token\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"userId\", [computed], Object.getOwnPropertyDescriptor(_class.prototype, \"userId\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"logOut\", [action], Object.getOwnPropertyDescriptor(_class.prototype, \"logOut\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"getUserInfo\", [action], Object.getOwnPropertyDescriptor(_class.prototype, \"getUserInfo\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"checkLogined\", [action], Object.getOwnPropertyDescriptor(_class.prototype, \"checkLogined\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"setUsername\", [action], Object.getOwnPropertyDescriptor(_class.prototype, \"setUsername\"), _class.prototype)), _class);\nvar currentUser = new UserSession();\nexport default currentUser;","map":{"version":3,"sources":["/Users/zhoushixiong/zsx_work/FangAllOne/src/mobx/global/UserSession.ts"],"names":["CHECK_AUTH","SHOW_ID","observable","computed","action","auth","api","informationMsg","UserSession","console","log","window","localStorage","removeItem","username","isLogined","fetching","userId","id","token","fields","then","rlt","data","toString","show","catch","err","value","getItem","currentUser"],"mappings":";;;;;;;;AAAA,SAASA,UAAT,EAAqBC,OAArB,QAAoC,uBAApC;AACA,SAASC,UAAT,EAAqBC,QAArB,EAA+BC,MAA/B,QAA6C,MAA7C;AACA,SAASC,IAAT,EAAeC,GAAf,QAA0B,WAA1B;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AAEA,WAAaC,WAAb;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA,6BAaoB;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAY,GAAZ;AAEAC,MAAAA,MAAM,CAACC,YAAP,CAAoBC,UAApB,CAA+B,YAA/B;AACAF,MAAAA,MAAM,CAACC,YAAP,CAAoBC,UAApB,CAA+B,aAA/B;AACA,WAAKC,QAAL,GAAgB,EAAhB;AACA,WAAKC,SAAL,GAAiB,KAAjB;AACA,WAAKC,QAAL,GAAgB,KAAhB;AACH;AArBL;AAAA;AAAA,kCAuByB;AAAA;;AACjBP,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AAEA,WAAKM,QAAL,GAAgB,IAAhB;;AACA,UAAG,CAAC,KAAKC,MAAT,EAAgB;AACZ,aAAKF,SAAL,GAAiB,KAAjB;AACAJ,QAAAA,MAAM,CAACC,YAAP,CAAoBC,UAApB,CAA+B,YAA/B;AACA,eAAOF,MAAM,CAACC,YAAP,CAAoBC,UAApB,CAA+B,aAA/B,CAAP;AACH;;AACDJ,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKO,MAAjB;AAEAX,MAAAA,GAAG,CAAC,OAAD,EAASL,OAAT,EAAkB;AAACiB,QAAAA,EAAE,EAAE,KAAKD,MAAV;AAAkBE,QAAAA,KAAK,EAAE,KAAKA;AAA9B,OAAlB,EAAwD;AACvDC,QAAAA,MAAM,EAAE,CAAC,UAAD,EAAa,IAAb;AAD+C,OAAxD,CAAH,CAEGC,IAFH,CAEQ,UAACC,GAAD,EAAW;AACfb,QAAAA,OAAO,CAACC,GAAR,CAAYY,GAAZ;AAEA,QAAA,KAAI,CAACN,QAAL,GAAgB,KAAhB;;AAEA,YAAGM,GAAG,CAACC,IAAJ,CAASL,EAAT,CAAYM,QAAZ,OAA2B,KAAI,CAACP,MAAnC,EAA0C;AAEtC,UAAA,KAAI,CAACF,SAAL,GAAiB,IAAjB;AACA,iBAAO,KAAI,CAACD,QAAL,GAAgBQ,GAAG,CAACC,IAAJ,CAAST,QAAhC;AACH,SAJD,MAIK;AACD,UAAA,KAAI,CAACC,SAAL,GAAiB,KAAjB;AACAJ,UAAAA,MAAM,CAACC,YAAP,CAAoBC,UAApB,CAA+B,YAA/B;AACAF,UAAAA,MAAM,CAACC,YAAP,CAAoBC,UAApB,CAA+B,aAA/B;AACH;AAEJ,OAjBD;AAkBH;AApDL;AAAA;AAAA,mCAqD0B;AAAA;;AACd,UAAMM,KAAK,GAAG,KAAKA,KAAnB;;AAEA,UAAI,CAACA,KAAL,EAAY;AACR,aAAKJ,SAAL,GAAiB,KAAjB;AACA,eAAOR,cAAc,CAACkB,IAAf,CAAoB,MAApB,CAAP;AAEH;;AACD,WAAKV,SAAL,GAAiB,IAAjB,CARc,CAQQ;;AAEtBV,MAAAA,IAAI,CAACL,UAAD,EAAamB,KAAb,CAAJ,CAAwBE,IAAxB,CAA6B,UAACC,GAAD,EAAW;AACpC,YAAGA,GAAG,CAACC,IAAJ,CAASC,QAAT,OAAwB,MAAI,CAACP,MAAhC,EAAuC;AAEnC,iBAAO,MAAI,CAACF,SAAL,GAAiB,IAAxB;AACH;;AACD,QAAA,MAAI,CAACA,SAAL,GAAiB,KAAjB;AACA,eAAOR,cAAc,CAACkB,IAAf,CAAoB,MAApB,CAAP;AAEH,OARD,EAQGC,KARH,CAQS,UAACC,GAAD,EAAW;AACjB,YAAGA,GAAG,CAACH,QAAJ,OAAiB,4CAApB,EAAiE;AAC7D,UAAA,MAAI,CAACT,SAAL,GAAiB,KAAjB;AACC,iBAAOR,cAAc,CAACkB,IAAf,CAAoB,MAApB,CAAP;AAEJ;AAEH,OAfD;AAkBP;AAjFL;AAAA;AAAA,gCAkFwBG,KAlFxB,EAkFkC;AAC1B,aAAO,KAAKd,QAAL,GAAgBc,KAAvB;AACH;AApFL;AAAA;AAAA,wBAKyB;AACjB,aAAOjB,MAAM,CAACC,YAAP,CAAoBiB,OAApB,CAA4B,YAA5B,CAAP;AACH;AAPL;AAAA;AAAA,wBAQ0B;AAClB,aAAOlB,MAAM,CAACC,YAAP,CAAoBiB,OAApB,CAA4B,aAA5B,CAAP;AAEH;AAXL;;AAAA;AAAA,6EACK3B,UADL;AAAA;AAAA;AAAA;AAAA;AAAA,WACyB,EADzB;AAAA;AAAA,6EAEKA,UAFL;AAAA;AAAA;AAAA;AAAA;AAAA,WAE4B,IAF5B;AAAA;AAAA,4EAGKA,UAHL;AAAA;AAAA;AAAA;AAAA;AAAA,WAG2B,KAH3B;AAAA;AAAA,0DAKKC,QALL,yIAQKA,QARL,0IAaKC,MAbL,+IAuBKA,MAvBL,qJAqDKA,MArDL,qJAkFKA,MAlFL;AAwFA,IAAM0B,WAAW,GAAG,IAAItB,WAAJ,EAApB;AACA,eAAesB,WAAf","sourcesContent":["import { CHECK_AUTH, SHOW_ID } from './../../constants/API';\nimport { observable, computed, action } from \"mobx\";\nimport { auth, api } from \"../../api\";\nimport informationMsg from './InformationMsg';\n\nexport class UserSession {\n    @observable username=\"\";\n    @observable isLogined = true;\n    @observable fetching = false;\n\n    @computed get token(){\n        return window.localStorage.getItem('fang_token');\n    }\n    @computed get userId(){\n        return window.localStorage.getItem('fang_userId');\n\n    }\n\n    @action logOut(){\n        console.log('2');\n        \n        window.localStorage.removeItem('fang_token');\n        window.localStorage.removeItem('fang_userId');\n        this.username = \"\";\n        this.isLogined = false;\n        this.fetching = false;\n    }\n\n    @action getUserInfo(){\n        console.log('登录成功拉取数据');\n        \n        this.fetching = true;\n        if(!this.userId){\n            this.isLogined = false;\n            window.localStorage.removeItem('fang_token');\n            return window.localStorage.removeItem('fang_userId');\n        }\n        console.log(this.userId);\n        \n        api('users',SHOW_ID, {id: this.userId, token: this.token}, {\n            fields: ['username', 'id']\n        }).then((rlt:any)=>{\n            console.log(rlt);\n            \n            this.fetching = false;\n            \n            if(rlt.data.id.toString() === this.userId){\n                \n                this.isLogined = true;\n                return this.username = rlt.data.username;\n            }else{\n                this.isLogined = false;\n                window.localStorage.removeItem('fang_token');\n                window.localStorage.removeItem('fang_userId');\n            }\n            \n        })\n    }\n    @action checkLogined(){\n            const token = this.token;\n            \n            if (!token) {\n                this.isLogined = false;\n                return informationMsg.show('您已登出');\n\n            }\n            this.isLogined = true;//预期是登录成功，这样可以保障登录或者注册一瞬间，不会被登出\n        \n            auth(CHECK_AUTH, token).then((rlt:any)=>{\n                if(rlt.data.toString() === this.userId){\n                    \n                    return this.isLogined = true;\n                }\n                this.isLogined = false;\n                return informationMsg.show('您已登出');\n                \n            }).catch((err:any)=>{\n               if(err.toString()==='Error: Request failed with status code 401'){\n                   this.isLogined = false;\n                    return informationMsg.show('您已登出');\n\n               }\n               \n            });\n            \n       \n    }\n    @action setUsername(value:any){\n        return this.username = value;\n    }\n\n}\n\nconst currentUser = new UserSession();\nexport default currentUser;"]},"metadata":{},"sourceType":"module"}
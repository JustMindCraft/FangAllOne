{"ast":null,"code":"import _regeneratorRuntime from \"/Users/zhoushixiong/zsx_work/FangAllOne/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/zhoushixiong/zsx_work/FangAllOne/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _initializerDefineProperty from \"/Users/zhoushixiong/zsx_work/FangAllOne/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/initializerDefineProperty\";\nimport _classCallCheck from \"/Users/zhoushixiong/zsx_work/FangAllOne/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/zhoushixiong/zsx_work/FangAllOne/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _applyDecoratedDescriptor from \"/Users/zhoushixiong/zsx_work/FangAllOne/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/applyDecoratedDescriptor\";\nimport _initializerWarningHelper from \"/Users/zhoushixiong/zsx_work/FangAllOne/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/initializerWarningHelper\";\n\nvar _class, _descriptor, _descriptor2, _descriptor3, _descriptor4, _descriptor5, _descriptor6, _descriptor7, _descriptor8, _descriptor9, _descriptor10, _descriptor11, _descriptor12;\n\nimport { observable, action, computed } from \"mobx\";\nimport { auth } from \"../../api\";\nimport { AUTH } from \"../../constants/API\";\nexport var LoginFormStore = (_class =\n/*#__PURE__*/\nfunction () {\n  function LoginFormStore() {\n    _classCallCheck(this, LoginFormStore);\n\n    _initializerDefineProperty(this, \"username\", _descriptor, this);\n\n    _initializerDefineProperty(this, \"password\", _descriptor2, this);\n\n    _initializerDefineProperty(this, \"logining\", _descriptor3, this);\n\n    _initializerDefineProperty(this, \"isSuccess\", _descriptor4, this);\n\n    _initializerDefineProperty(this, \"isSubmit\", _descriptor5, this);\n\n    _initializerDefineProperty(this, \"mobileInput\", _descriptor6, this);\n\n    _initializerDefineProperty(this, \"smsInput\", _descriptor7, this);\n\n    _initializerDefineProperty(this, \"smsFetching\", _descriptor8, this);\n\n    _initializerDefineProperty(this, \"model\", _descriptor9, this);\n\n    _initializerDefineProperty(this, \"smsCounter\", _descriptor10, this);\n\n    _initializerDefineProperty(this, \"isCounting\", _descriptor11, this);\n\n    _initializerDefineProperty(this, \"counter\", _descriptor12, this);\n  }\n\n  _createClass(LoginFormStore, [{\n    key: \"setModel\",\n    value: function setModel(value) {\n      return this.model = value;\n    }\n  }, {\n    key: \"reset\",\n    value: function reset() {\n      this.username = \"\";\n      this.password = \"\";\n      this.logining = false;\n      this.isSuccess = false;\n      this.isSubmit = false;\n      this.smsFetching = false;\n      this.mobileInput = '';\n      this.smsInput = '';\n    }\n  }, {\n    key: \"changeUsername\",\n    value: function changeUsername(value) {\n      this.isSubmit = true;\n      return this.username = value;\n    }\n  }, {\n    key: \"changePassword\",\n    value: function changePassword(value) {\n      this.isSubmit = true;\n      return this.password = value;\n    }\n  }, {\n    key: \"changeMobileInput\",\n    value: function changeMobileInput(value) {\n      return this.mobileInput = value;\n    }\n  }, {\n    key: \"changeSmsInput\",\n    value: function changeSmsInput(value) {\n      return this.smsInput = value;\n    }\n  }, {\n    key: \"login\",\n    value: function () {\n      var _login = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var _this = this;\n\n        var cb,\n            username,\n            password,\n            _args = arguments;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                cb = _args.length > 0 && _args[0] !== undefined ? _args[0] : function (msg) {};\n                console.log(this.username);\n                this.isSubmit = true;\n                this.logining = true;\n                username = this.username;\n                password = this.password;\n\n                if (this.model === \"sms\") {\n                  username = this.mobileInput;\n                  password = this.smsInput;\n                }\n\n                auth(AUTH, {\n                  username: username,\n                  password: password,\n                  model: this.model\n                }).then(function (rlt) {\n                  _this.password = '';\n\n                  if (!rlt.data) {\n                    _this.logining = false;\n                    _this.isSuccess = false;\n                    return cb(_this.msg);\n                  }\n\n                  if (rlt.statusCode === 400) {\n                    _this.logining = false;\n                    _this.isSuccess = false;\n                    return cb('服务器出错');\n                  }\n\n                  if (rlt.data.username === _this.username) {\n                    window.localStorage.setItem('fang_token', rlt.data.token);\n                    window.localStorage.setItem('fang_userId', rlt.data.id);\n                    _this.isSuccess = true;\n                    return cb(_this.msg);\n                  }\n\n                  return cb(_this.msg);\n                }).catch(function (err) {\n                  _this.logining = false;\n                  _this.isSuccess = false;\n\n                  if (err.toString() === \"Error: Request failed with status code 400\") {\n                    return cb(\"服务器出错，请开发人员检查\");\n                  }\n                }).finally(function () {\n                  console.log('\b用户名密码错误');\n                  _this.logining = false;\n                  _this.isSuccess = false;\n                });\n\n              case 8:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function login() {\n        return _login.apply(this, arguments);\n      }\n\n      return login;\n    }()\n  }, {\n    key: \"backCount\",\n    value: function backCount() {\n      var _this2 = this;\n\n      this.isCounting = true;\n      this.counter = window.setInterval(function () {\n        _this2.smsCounter--;\n\n        if (_this2.smsCounter <= 0) {\n          window.clearInterval(_this2.counter);\n          _this2.isCounting = false;\n        }\n      }, 1000);\n    }\n  }, {\n    key: \"isPassed\",\n    get: function get() {\n      return this.username !== '' ? this.password ? true : false : false;\n    }\n  }, {\n    key: \"smsIsPassed\",\n    get: function get() {\n      return this.mobileInput !== '' ? this.smsInput ? true : false : false;\n    }\n  }, {\n    key: \"msgType\",\n    get: function get() {\n      return this.isSuccess ? \"success\" : \"error\";\n    }\n  }, {\n    key: \"msg\",\n    get: function get() {\n      return this.isSuccess ? \"登录成功\" : \"用户名或者密码错误\";\n    }\n  }]);\n\n  return LoginFormStore;\n}(), (_descriptor = _applyDecoratedDescriptor(_class.prototype, \"username\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return \"\";\n  }\n}), _descriptor2 = _applyDecoratedDescriptor(_class.prototype, \"password\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return \"\";\n  }\n}), _descriptor3 = _applyDecoratedDescriptor(_class.prototype, \"logining\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return false;\n  }\n}), _descriptor4 = _applyDecoratedDescriptor(_class.prototype, \"isSuccess\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return false;\n  }\n}), _descriptor5 = _applyDecoratedDescriptor(_class.prototype, \"isSubmit\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return false;\n  }\n}), _descriptor6 = _applyDecoratedDescriptor(_class.prototype, \"mobileInput\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return \"\";\n  }\n}), _descriptor7 = _applyDecoratedDescriptor(_class.prototype, \"smsInput\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return \"\";\n  }\n}), _descriptor8 = _applyDecoratedDescriptor(_class.prototype, \"smsFetching\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return false;\n  }\n}), _descriptor9 = _applyDecoratedDescriptor(_class.prototype, \"model\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return 'sms';\n  }\n}), _descriptor10 = _applyDecoratedDescriptor(_class.prototype, \"smsCounter\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return 60;\n  }\n}), _descriptor11 = _applyDecoratedDescriptor(_class.prototype, \"isCounting\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return false;\n  }\n}), _descriptor12 = _applyDecoratedDescriptor(_class.prototype, \"counter\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _applyDecoratedDescriptor(_class.prototype, \"isPassed\", [computed], Object.getOwnPropertyDescriptor(_class.prototype, \"isPassed\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"smsIsPassed\", [computed], Object.getOwnPropertyDescriptor(_class.prototype, \"smsIsPassed\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"msgType\", [computed], Object.getOwnPropertyDescriptor(_class.prototype, \"msgType\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"msg\", [computed], Object.getOwnPropertyDescriptor(_class.prototype, \"msg\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"setModel\", [action], Object.getOwnPropertyDescriptor(_class.prototype, \"setModel\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"reset\", [action], Object.getOwnPropertyDescriptor(_class.prototype, \"reset\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"changeUsername\", [action], Object.getOwnPropertyDescriptor(_class.prototype, \"changeUsername\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"changePassword\", [action], Object.getOwnPropertyDescriptor(_class.prototype, \"changePassword\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"changeMobileInput\", [action], Object.getOwnPropertyDescriptor(_class.prototype, \"changeMobileInput\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"changeSmsInput\", [action], Object.getOwnPropertyDescriptor(_class.prototype, \"changeSmsInput\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"login\", [action], Object.getOwnPropertyDescriptor(_class.prototype, \"login\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"backCount\", [action], Object.getOwnPropertyDescriptor(_class.prototype, \"backCount\"), _class.prototype)), _class);\nvar loginFormStore = new LoginFormStore();\nexport default loginFormStore;","map":{"version":3,"sources":["/Users/zhoushixiong/zsx_work/FangAllOne/src/mobx/components/LoginFormStore.ts"],"names":["observable","action","computed","auth","AUTH","LoginFormStore","value","model","username","password","logining","isSuccess","isSubmit","smsFetching","mobileInput","smsInput","cb","msg","console","log","then","rlt","data","statusCode","window","localStorage","setItem","token","id","catch","err","toString","finally","isCounting","counter","setInterval","smsCounter","clearInterval","loginFormStore"],"mappings":"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","sourcesContent":["import { observable, action, computed } from \"mobx\";\nimport { auth } from \"../../api\";\nimport { AUTH } from \"../../constants/API\";\n\nexport class LoginFormStore{\n    @observable username=\"\";\n    @observable password=\"\";\n    @observable logining = false;\n    @observable isSuccess = false;\n    @observable isSubmit = false;\n    @observable mobileInput=\"\";\n    @observable smsInput=\"\";\n    @observable smsFetching = false;\n    @observable model = 'sms';\n    @observable smsCounter = 60;\n    @observable isCounting = false;\n    @observable counter:any;\n\n    @computed get isPassed(){\n        return this.username !== ''?\n                this.password? true: false :\n                false\n    }\n    @computed get smsIsPassed(){\n        return this.mobileInput !== ''?\n        this.smsInput? true: false :\n        false\n    }\n    @computed get msgType(){\n        return this.isSuccess? \"success\" : \"error\"\n    }\n    @computed get msg(){\n        return this.isSuccess? \"登录成功\" : \"用户名或者密码错误\";\n    }\n\n    @action setModel(value:string){\n        return this.model = value\n    }\n    @action reset(){\n        this.username = \"\";\n        this.password = \"\";\n        this.logining = false;\n        this.isSuccess = false;\n        this.isSubmit = false;\n        this.smsFetching =false;\n        this.mobileInput = '';\n        this.smsInput = '';\n\n    }\n    \n    @action changeUsername(value:any){\n        this.isSubmit = true;\n        return this.username = value;\n    }\n    @action changePassword(value:any){\n        this.isSubmit = true;\n        return this.password = value;\n    }\n    @action changeMobileInput(value: any){\n        return this.mobileInput = value;\n    }\n    @action changeSmsInput(value:any){\n        return this.smsInput = value;\n    }\n    @action async login(cb:Function=(msg:any)=>{}){\n        console.log(this.username);\n        \n        this.isSubmit = true;\n        this.logining = true;\n        let username = this.username;\n        let password = this.password;\n        if(this.model === \"sms\"){\n            username = this.mobileInput;\n            password = this.smsInput;\n\n        }\n        auth(AUTH, {\n            username,\n            password,\n            model: this.model,\n        }).then((rlt:any)=>{\n            this.password = '';\n            if(!rlt.data){\n                this.logining = false;\n                this.isSuccess = false;\n                return cb(this.msg);\n\n            }\n            if(rlt.statusCode === 400){\n                this.logining = false;\n                this.isSuccess = false;\n                return cb('服务器出错');\n            }\n            \n            if(rlt.data.username === this.username){\n                window.localStorage.setItem('fang_token', rlt.data.token);\n                window.localStorage.setItem('fang_userId', rlt.data.id);\n               this.isSuccess = true;\n                return cb(this.msg);\n                \n            }\n            return cb(this.msg);\n            \n        }).catch((err:any)=>{\n            this.logining = false;\n            this.isSuccess = false;\n            if(err.toString()===\"Error: Request failed with status code 400\"){\n                return cb(\"服务器出错，请开发人员检查\");\n            }\n            \n        }).finally(()=>{\n            console.log('\b用户名密码错误');\n            \n            this.logining = false;\n            this.isSuccess = false;\n        })\n    }\n    \n\n    @action backCount(){\n        this.isCounting = true;\n        this.counter = window.setInterval(()=>{\n            this.smsCounter--;\n            if(this.smsCounter<=0){\n                window.clearInterval(this.counter);\n                this.isCounting = false;\n            }\n            \n        }, 1000)\n    }\n}\n\nconst loginFormStore = new LoginFormStore()\n\nexport default loginFormStore;"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.cancelAnimationFrame = exports.requestAnimationFrame = void 0; // http://paulirish.com/2011/requestanimationframe-for-smart-animating/\n// http://my.opera.com/emoller/blog/2011/12/20/requestanimationframe-for-smart-er-animating\n// https://gist.github.com/paulirish/1579671\n// requestAnimationFrame polyfill by Erik MÃ¶ller. fixes from Paul Irish and Tino Zijdel\n// MIT license\n\nvar lastTime = 0;\nvar vendors = ['ms', 'moz', 'webkit', 'o'];\nvar requestAnimationFrame;\nexports.requestAnimationFrame = requestAnimationFrame;\nvar cancelAnimationFrame;\nexports.cancelAnimationFrame = cancelAnimationFrame;\n\nif (typeof window != \"undefined\") {\n  exports.requestAnimationFrame = requestAnimationFrame = window.requestAnimationFrame;\n  exports.cancelAnimationFrame = cancelAnimationFrame = window.cancelAnimationFrame;\n\n  for (var x = 0; x < vendors.length && !requestAnimationFrame; ++x) {\n    exports.requestAnimationFrame = requestAnimationFrame = window[vendors[x] + 'RequestAnimationFrame'];\n    exports.cancelAnimationFrame = cancelAnimationFrame = window[vendors[x] + 'CancelAnimationFrame'] || window[vendors[x] + 'CancelRequestAnimationFrame'];\n  }\n}\n\nif (!requestAnimationFrame) exports.requestAnimationFrame = requestAnimationFrame = function requestAnimationFrame(callback, element) {\n  var currTime = new Date().getTime();\n  var timeToCall = Math.max(0, 16 - (currTime - lastTime));\n  var id = setTimeout(function () {\n    callback(currTime + timeToCall);\n  }, timeToCall);\n  lastTime = currTime + timeToCall;\n  return id;\n};\nif (!cancelAnimationFrame) exports.cancelAnimationFrame = cancelAnimationFrame = function cancelAnimationFrame(id) {\n  clearTimeout(id);\n};","map":null,"metadata":{},"sourceType":"script"}
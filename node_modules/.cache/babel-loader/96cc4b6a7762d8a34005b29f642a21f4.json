{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = debounce;\n/**\n * Delay execution of func until wait milliseconds have passed since the last invocation of the returned debounced function.\n * @param {function} func the function to execute\n * @param {number} wait waiting time in milliseconds\n * @param {boolean=false} immediate if true execute func at the beginning of the wait period\n * @returns {function()} debounced function\n * @protected\n */\n\nfunction debounce(func, wait, immediate) {\n  var _this = this,\n      _arguments = arguments;\n\n  var timeout = null;\n\n  var debounced = function debounced() {\n    var context = _this;\n    var args = _arguments;\n    var callNow = immediate && !timeout;\n\n    if (timeout) {\n      clearTimeout(timeout);\n    }\n\n    var later = function later() {\n      timeout = null;\n\n      if (!immediate) {\n        func.apply(context, args);\n      }\n    };\n\n    timeout = setTimeout(later, wait);\n\n    if (callNow) {\n      func.apply(context, args);\n    }\n  };\n\n  debounced.cancel = function () {\n    clearTimeout(timeout);\n    timeout = null;\n  };\n\n  return debounced;\n}","map":null,"metadata":{},"sourceType":"script"}